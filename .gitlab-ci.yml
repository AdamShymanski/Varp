default:
  # custom image from Dockerfile
  image: $CI_REGISTRY_IMAGE/ci:latest

stages:
  - initialize
  - build
  - test
  - preview:client
  - preview:ui
  - deploy

cache:
  paths:
    - node_modules/
    - "**/node_modules/"

initialize:
  stage: initialize
  only:
    refs:
      - merge_requests
    # skip initialize if no change in package.json
    changes:
      - "**/package.json"
  script:
    - lerna bootstrap
    - firebase hosting:channel:open live --non-interactive

build:client:
  stage: build
  only:
    - merge_requests
  cache:
    policy: pull
    paths:
      - node_modules/
  script:
    - lerna run --scope @varp/client build --stream
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - packages/client/dist/

test:
  stage: test
  cache: {}
  only:
    - merge_requests
  script:
    - echo test

preview:client:
  stage: preview:client
  only:
    - merge_requests
  script:
    - firebase hosting:channel:deploy $CI_COMMIT_REF_SLUG --non-interactive --token "$FIREBASE_TOKEN"
    - echo "ENVIRONMENT_URL=$(firebase hosting:channel:open $CI_COMMIT_REF_SLUG --non-interactive | awk '{ print $3 }')" >> deploy.env
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: $ENVIRONMENT_URL
  variables:
    ENVIRONMENT: staging
  artifacts:
    reports:
      dotenv: deploy.env


preview:ui:
  stage: preview:ui
  only:
    - merge_requests
  cache:
    policy: pull
    paths:
      - node_modules/
  script:
    - npx lerna run --scope @varp/ui chromatic --stream
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - packages/ui/dist/

deploy_client:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  variables:
    ENVIRONMENT: production
  script:
    - export PREV_COMMIT_SLUG=$(git log --pretty='%s' -1 | awk '{ print $3 }' | sed -e "s/^'//" -e "s/'$//")
    - firebase hosting:clone varp-ba7a7:$PREV_COMMIT_SLUG varp-ba7a7:live --non-interactive --token "$FIREBASE_TOKEN"
    - echo "ENVIRONMENT_URL=$(firebase hosting:channel:open live --non-interactive | awk '{ print $3 }')" >> deploy.env
  environment:
    name: production
    url: $ENVIRONMENT_URL
  artifacts:
    reports:
      dotenv: deploy.env

deploy_functions:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - functions/*
  script:
    - cd functions
    - npm install
    - cd ..
    - firebase deploy --only functions --non-interactive --token "$FIREBASE_TOKEN"
  environment:
    name: production-functions
