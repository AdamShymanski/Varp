default:
  image: node:latest

stages:
  - initialize
  - build
  - test
  - preview
  - deploy
  - cleaning


cache:
  paths:
    - node_modules/

initialize:
  stage: initialize
  only:
    - merge_requests
  script:
    - npx lerna bootstrap -- --production

# build:ui:
#   stage: build
#   only:
#     - merge_requests
#   cache:
#     policy: pull
#     paths:
#       - node_modules/
#   script:
#     - npx lerna run --scope @pyramid/ui build --stream
#   artifacts:
#     name: "$CI_JOB_NAME"
#     paths:
#       - packages/ui/dist/

build:client:
  stage: build
  only:
    - merge_requests
  cache:
    policy: pull
    paths:
      - node_modules/
  script:
    - npx lerna run --scope @pyramid/client build --stream
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - packages/client/dist/

test:
  stage: test
  only:
    - merge_requests
  script:
    - echo test

preview:
  stage: preview
  only:
    - merge_requests
  before_script:
    - npm install -g firebase-tools
  script:
    - firebase hosting:channel:deploy $CI_COMMIT_REF_SLUG --non-interactive --token "$FIREBASE_TOKEN"
    - echo "ENVIRONMENT_URL=$(firebase hosting:channel:open $CI_COMMIT_REF_SLUG --non-interactive | awk '{ print $3 }')" >> deploy.env
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: $ENVIRONMENT_URL
    on_stop: stop_branch
  variables:
    ENVIRONMENT: staging
  artifacts:
    reports:
      dotenv: deploy.env

deploy_client:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - npm install -g firebase-tools
  variables:
    ENVIRONMENT: production
    PREV_COMMIT_REF_SLUG: echo $(git log -1 --no-merges --pretty='%D' | awk -F', ' '{print $2}')
  script:
    - firebase hosting:clone pyramid-64ab2:$PREV_COMMIT_REF_SLUG pyramid-64ab2:live --non-interactive --token "$FIREBASE_TOKEN"
    - echo "ENVIRONMENT_URL=$(firebase hosting:channel:open live --non-interactive | awk '{ print $3 }')" >> deploy.env
  environment:
    name: production
    url: $ENVIRONMENT_URL
  artifacts:
    reports:
      dotenv: deploy.env

stop_branch:
  stage: cleaning
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - firebase hosting:channel:delete -f $CI_COMMIT_REF_SLUG
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop

deploy_functions:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - functions/**/*
  before_script:
    - npm install -g firebase-tools
  script:
    - cd functions
    - npm install
    - cd ..
    - firebase deploy --only functions --non-interactive --token "$FIREBASE_TOKEN"
  environment:
    name: production-functions