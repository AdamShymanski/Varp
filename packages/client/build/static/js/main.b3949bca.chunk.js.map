{"version":3,"sources":["resources/icons/logo.svg","react/elements/FirstElement.js","resources/icons/expand.svg","resources/icons/shrink.svg","react/elements/SecondElement.js","react/elements/ThirdElement.js","react/LandingPageNew.js","react/SignUpPage.js","App.js","index.js"],"names":["useStyles","makeStyles","accountIcon","color","fontSize","marginTop","FirstElement","props","classes","className","visibility","icon","fontWeight","handleCardsClass","state","SecondElement","useState","aState","setA","bState","setB","cState","setC","dState","setD","src","expandIcon","alt","onClick","shrinkIcon","ThirdElement","c","arrowF","position","right","arrowGb","left","LandingPageNew","history","useHistory","visibilityState","setVisibilityState","handleScrollIndicator","element","index","logo","push","exclamationIcon","SignUpPage","type","id","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3949bca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f76541a9.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./../../sass/elements/FirstElement-style.scss\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport PublicOutlinedIcon from \"@material-ui/icons/PublicOutlined\";\r\n\r\nconst useStyles = makeStyles({\r\n  accountIcon: {\r\n    color: \"#f4f4f4\",\r\n    fontSize: \"4.8vw\",\r\n    marginTop: \"1vh\",\r\n  },\r\n});\r\nfunction FirstElement(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={`feWrapper ${props.visibility() ? \" visible\" : \"invisible\"}`}>\r\n      <article>\r\n        <div className='title poppinsFont flexRow'>\r\n          <div className='accentLine' />\r\n          <p>What Pyramid is?</p>\r\n        </div>\r\n        <div className='body poppinsFont'>\r\n          <p>\r\n            This will be a web application where young people can compete in arcade games like Pac-Man, Icy Tower, Snake\r\n            and so on for money.\r\n          </p>\r\n          <p>\r\n            Overall simple, easy games. Pyramid will be an <span>alternative to tediously filling out surveys</span> on\r\n            Swagbucks type sites.\r\n          </p>\r\n          <p>\r\n            Pyramid adds <span>risk</span> and an element of competition between users to this model. We noticed that\r\n            young people want to compete for money rather than have a certain profit.\r\n          </p>\r\n          <p>\r\n            In order to take part in the game, the player has to perform several tasks consisting of visiting the\r\n            sponsor's website, filling in a short questionnaire and other such tasks. Time to complete the tasks will\r\n            not exceed <span>10 minutes</span>.\r\n          </p>\r\n          <p>\r\n            After completing them you will receive tokens for which you will be able to take part in the game In Pyramid\r\n            the potential earnings from the tasks of all the players are added together <span>creating a pool </span>\r\n            which only a few winners will win.\r\n          </p>\r\n          <p>\r\n            This way, players can get their money much <span>faster</span> and in a <span>more interesting way</span>.\r\n            All prizes are paid out in <span>cash</span>.\r\n          </p>\r\n        </div>\r\n      </article>\r\n      <article>\r\n        <div className='title poppinsFont flexRow'>\r\n          <div className='accentLine' />\r\n          <p>What Pyramid've already achieved?</p>\r\n        </div>\r\n        <div className='body poppinsFont'>\r\n          <p>\r\n            Pyramid is just getting started. We started about 1 week ago. You can see our latest developments below. We\r\n            are very proud of them and want to share them with you, but that's not the only goal. They also show how\r\n            many companies and people trust us and how engaged community we create. You can join it today!\r\n          </p>\r\n        </div>\r\n        <div className='cardWrapper flexRow'>\r\n          <div className='cardF flexColumn'>\r\n            <AccountBoxIcon className={classes.accountIcon} />\r\n            <p className='number poppinsFont'>2,000+</p>\r\n            <p className='description poppinsFont'>Users who have already signed up</p>\r\n          </div>\r\n          <div className='cardF flexColumn'>\r\n            <BusinessIcon className={classes.accountIcon} />\r\n            <p className='number poppinsFont'>21</p>\r\n            <p className='description poppinsFont'>Trusted cooperating companies</p>\r\n          </div>\r\n          <div className='cardF flexColumn'>\r\n            <PublicOutlinedIcon className={classes.accountIcon} />\r\n            <p className='number poppinsFont'>13</p>\r\n            <p className='description poppinsFont'>The countries our users come from</p>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default FirstElement;\r\n","export default __webpack_public_path__ + \"static/media/expand.b8eb63b1.svg\";","export default __webpack_public_path__ + \"static/media/shrink.dd3834ab.svg\";","import React, { useState } from \"react\";\r\nimport \"./../../sass/elements/SecondElement-style.scss\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//material UI icons\r\nimport VideogameAssetOutlinedIcon from \"@material-ui/icons/VideogameAssetOutlined\";\r\nimport AttachMoneyOutlinedIcon from \"@material-ui/icons/AttachMoneyOutlined\";\r\nimport FindInPageOutlinedIcon from \"@material-ui/icons/FindInPageOutlined\";\r\nimport WorkOutlinedIcon from \"@material-ui/icons/WorkOutlined\";\r\n\r\n//icons\r\nimport expandIcon from \"../../resources/icons/expand.svg\";\r\nimport shrinkIcon from \"../../resources/icons/shrink.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  icon: {\r\n    color: \"#f4f4f4\",\r\n    fontSize: \"5vw\",\r\n    marginTop: \"1vh\",\r\n    fontWeight: \"300\",\r\n  },\r\n});\r\n\r\nconst handleCardsClass = (state) => {\r\n  if (state) {\r\n    return \"card expanded\";\r\n  } else return \"shrinked card \";\r\n};\r\nconst changeCardsSize = (setFunction) => {\r\n  setFunction();\r\n};\r\n\r\nfunction SecondElement(props) {\r\n  const classes = useStyles();\r\n\r\n  const [aState, setA] = useState(false);\r\n  const [bState, setB] = useState(false);\r\n  const [cState, setC] = useState(false);\r\n  const [dState, setD] = useState(false);\r\n  return (\r\n    <main className={`seWrapper ${props.visibility() ? \" visible\" : \"invisible\"}`}>\r\n      <article>\r\n        <div className='title flexRow'>\r\n          <div className='accentLine' />\r\n          <p className='poppinsFont'>How it works?</p>\r\n        </div>\r\n      </article>\r\n      <article>\r\n        <div className='bottom flexRow'>\r\n          <div className={handleCardsClass(aState)}>\r\n            <div className='topWrapper flexColumn'>\r\n              <WorkOutlinedIcon className={classes.icon} />\r\n              <h1 className='title poppinsFont'>Collaboration</h1>\r\n            </div>\r\n            <p className='description poppinsFont'>We work with many companies to raise money for the pools</p>\r\n            <p className='bigDescription poppinsFont'>\r\n              This is my job, I'm looking for companys which want to colaborate with Pyramid. It's source of money for\r\n              prizes for winners, but more on that later.\r\n            </p>\r\n            <img src={expandIcon} alt='Expand Icon' className='expandIcon' onClick={() => setA((aState) => !aState)} />\r\n            <img src={shrinkIcon} alt='Shrink Icon' className='shrinkIcon' onClick={() => setA((aState) => !aState)} />\r\n          </div>\r\n          <div className={handleCardsClass(bState)}>\r\n            <div className='topWrapper flexColumn'>\r\n              <FindInPageOutlinedIcon className={classes.icon} />\r\n              <h1 className='title poppinsFont'>Your Job</h1>\r\n            </div>\r\n            <p className='description poppinsFont'>Complete the tasks to get the tokens needed to join the game</p>\r\n            <p className='bigDescription poppinsFont'>\r\n              Your task is to get acquainted with Pyramid's collaborators and their offer, as part of the task you could\r\n              be requested to express your opinion about them, create an account on their website or just leave them\r\n              your contact details. After completing the task, you receive tokens that will allow you to join the game.\r\n              Remember that the amount tokens required to join the game is different each time, and largely depends on\r\n              the pool of money allocated for the prize.\r\n            </p>\r\n            <img src={expandIcon} alt='Expand Icon' className='expandIcon' onClick={() => setB((bState) => !bState)} />\r\n            <img src={shrinkIcon} alt='Shrink Icon' className='shrinkIcon' onClick={() => setB((bState) => !bState)} />\r\n          </div>\r\n          <div className={handleCardsClass(cState)}>\r\n            <div className='topWrapper flexColumn'>\r\n              <VideogameAssetOutlinedIcon className={classes.icon} />\r\n              <h1 className=' title poppinsFont'>Game</h1>\r\n            </div>\r\n\r\n            <p className='description poppinsFont'>Enjoy competition and play with other players in arcade games</p>\r\n            <p className='bigDescription poppinsFont'>\r\n              The game is very simple, you need to score as many points as possible in mini-games. When finished, the\r\n              scores are compared and the few people with the most points win the pot of money. Mini-games are usually\r\n              arcade games, board games and other games of this type. The most important feature is their simplicity\r\n            </p>\r\n            <img src={expandIcon} alt='Expand Icon' className='expandIcon' onClick={() => setC((cState) => !cState)} />\r\n            <img src={shrinkIcon} alt='Shrink Icon' className='shrinkIcon' onClick={() => setC((cState) => !cState)} />\r\n          </div>\r\n          <div className={handleCardsClass(dState)}>\r\n            <div className='topWrapper flexColumn'>\r\n              <AttachMoneyOutlinedIcon className={classes.icon} />\r\n              <h1 className='title poppinsFont'>Prize</h1>\r\n            </div>\r\n            <p className='description poppinsFont'>\r\n              If you are among the winners, collect your prize in cash on the same day\r\n            </p>\r\n            <p className='bigDescription poppinsFont'>\r\n              The prize is a pool of money, usually around $300, if you find yourself in the group of winners you will\r\n              receive cash in your bank account or PayPal. It is worth noting that you receive actual cash with your\r\n              withdrawal, not gift cards or other such rewards.\r\n            </p>\r\n            <img src={expandIcon} alt='Expand Icon' className='expandIcon' onClick={() => setD((dState) => !dState)} />\r\n            <img src={shrinkIcon} alt='Shrink Icon' className='shrinkIcon' onClick={() => setD((dState) => !dState)} />\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </main>\r\n  );\r\n}\r\nexport default SecondElement;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./../../sass/elements/ThirdElement-style.scss\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport GradeIcon from \"@material-ui/icons/Grade\";\r\n\r\nfunction ThirdElement(props) {\r\n  return (\r\n    <main className={` teWrapper poppinsFont ${props.visibility() ? \" visible\" : \"invisible\"}`}>\r\n      <div className='title flexRow'>\r\n        <div className='accentLine' />\r\n        <p className='poppinsFont'>How you can help?</p>\r\n      </div>\r\n      <div className='cardsWrapper'>\r\n        <article className='wideCard'>\r\n          <h1 c>\r\n            <span>1.</span> Create an account <span className='addendum'> DO IT NOW AND GET PREMIUM ACCOUNT</span>\r\n          </h1>\r\n          <p>\r\n            Registered users show that the project has interest. This makes companies more likely to collaborate with\r\n            us, which gives Pyramid a chance to grow up. Money from cooperation is a source of income for Pyramid and a\r\n            source of money for rewards for you. The more registered users the better.\r\n          </p>\r\n          <p className='cp-3 '>If you create an account at this stage, your account will have premium account :</p>\r\n          <ul>\r\n            <li>\r\n              <p>\r\n                <span>- </span>You will be able to join the first few games{\" \"}\r\n                <span> without spending tokens on them</span>\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <p>\r\n                <span>- </span>In the future, you will have to do fewer tasks to get a lot of points\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <p>\r\n                <span>- </span>And we will definitely pay you back for your help\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </article>\r\n        <article className='wideCard'>\r\n          <h1>\r\n            <span>2.</span> Express your opinion about this project\r\n          </h1>\r\n          <p>Yes, it's really that simple. </p>\r\n          <p>\r\n            Just write if you think Pyramid has a chance, what do you like and what not, what would you improve and so\r\n            on ...\r\n          </p>\r\n        </article>\r\n        <article className='wideCard'>\r\n          <h1>\r\n            <span>3.</span> Tell your friends about Pyramid\r\n          </h1>\r\n          <p>\r\n            Just send them a link to our site and summarize what you already know about us. It's the best thing you can\r\n            do for us :D\r\n          </p>\r\n        </article>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\nexport default ThirdElement;\r\n","import { useHistory } from \"react-router-dom\";\nimport React, { useState, useContext } from \"react\";\n\nimport \"./../sass/LandingPageNew-style.scss\";\n\n//resources\nimport logo from \"./../resources/icons/logo.svg\";\n\n//icons\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\n\n//elements\nimport FirstElement from \"./elements/FirstElement\";\nimport SecondElement from \"./elements/SecondElement\";\nimport ThirdElement from \"./elements/ThirdElement\";\n\nconst useStyles = makeStyles({\n  arrowF: {\n    position: \"absolute\",\n    right: \"0.6vw\",\n    fontSize: \"1.38em\",\n    fontWeight: \"700\",\n  },\n  arrowGb: {\n    position: \"absolute\",\n    left: \"0.6vw\",\n    fontSize: \"1.38em\",\n    fontWeight: \"700\",\n  },\n});\n\nfunction LandingPageNew() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const pushToSignUp = () => history.push(\"/sign-up\");\n\n  const [visibilityState, setVisibilityState] = useState(2);\n\n  const handleScrollIndicator = (element, index) => {\n    switch (visibilityState) {\n      case 1: {\n        if (element === \"dot\") {\n          if (index === 1) return \"dot accent\";\n          return \"dot\";\n        }\n        return \"line\";\n      }\n      case 2: {\n        if (element === \"dot\") {\n          switch (index) {\n            case 1:\n              return \"dot accent\";\n            case 2:\n              return \"dot accent\";\n          }\n          return \"dot\";\n        }\n        if (element === \"line\") {\n          if (index === 1) return \"line accent\";\n          return \"line\";\n        }\n      }\n      case 3: {\n        if (element === \"dot\") {\n          return \"dot accent\";\n        }\n        return \"line accent\";\n      }\n    }\n  };\n\n  return (\n    <div className='wrapper'>\n      <div className='navbar flexRow'>\n        <img src={logo} alt='Logo' className='logo' />\n        <ul className='flexRow'>\n          <li className='poppinsFont'>Home</li>\n          <li className='poppinsFont'>For Developers</li>\n          <li className='poppinsFont'>Contact</li>\n          <li className='poppinsFont suButton' onClick={pushToSignUp}>\n            Sign Up\n          </li>\n        </ul>\n      </div>\n      <div className='scrollIndicator flexColumn'>\n        <div className='dotWrapper flexRow'>\n          <div className={handleScrollIndicator(\"dot\", 1)} />\n          <p className='poppinsFont'>What is Pyramid?</p>\n        </div>\n\n        <div className={handleScrollIndicator(\"line\", 1)} />\n        <div className='dotWrapper flexRow'>\n          <div className={handleScrollIndicator(\"dot\", 2)} />\n          <p className='poppinsFont'>How It Works?</p>\n        </div>\n        <div className={handleScrollIndicator(\"line\", 2)} />\n        <div className='dotWrapper flexRow'>\n          <div className={handleScrollIndicator(\"dot\", 3)} />\n          <p className='poppinsFont'>How You Can Help?</p>\n        </div>\n      </div>\n      <FirstElement\n        visibility={() => {\n          if (visibilityState == 1) return true;\n          else return false;\n        }}\n      />\n      <SecondElement\n        visibility={() => {\n          if (visibilityState == 2) return true;\n          else return false;\n        }}\n      />\n      <ThirdElement\n        visibility={() => {\n          if (visibilityState == 3) return true;\n          else return false;\n        }}\n      />\n      <div className='navigationButtons '>\n        <button\n          className={`poppinsFont gbBtn flexRow ${visibilityState === 1 ? \"invisible\" : \"\"}`}\n          onClick={() => setVisibilityState((visibilityState) => visibilityState - 1)}>\n          <ArrowBackIosIcon className={classes.arrowGb} />\n          Go Back\n        </button>\n        <button\n          className={`poppinsFont nBtn flexRow ${visibilityState === 3 ? \"invisible\" : \"\"}`}\n          onClick={() => setVisibilityState((visibilityState) => visibilityState + 1)}>\n          Next\n          <ArrowForwardIosIcon className={classes.arrowF} />\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default LandingPageNew;\n","import React, { useState } from \"react\";\r\nimport \"./../sass/CreateAccountPageNew-style.scss\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\n\r\nimport Axios from \"axios\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  exclamationIcon: {\r\n    color: \"#3a3a3a\",\r\n    fontSize: \"1.4vw\",\r\n\r\n    left: \"23vw\",\r\n    position: \"absolute\",\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function SignUpPage() {\r\n  const classes = useStyles();\r\n\r\n  \r\n  return (\r\n    <div className='wrapper flexColumn'>\r\n      <h1 className='robotoFont'>Sign Up</h1>\r\n      <p className='robotoFont description-s  '>\r\n        Text to accompany header will go here, for now, lorem ipsum impsudo suoas\r\n      </p>\r\n      <form className=' flexColumn'>\r\n        <div className='inputWrapper flexColumn'>\r\n          <p className='label robotoFont' type='email'>\r\n            Email\r\n          </p>\r\n          <input className='robotoFont' />\r\n        </div>\r\n\r\n        <div className='inputWrapper flexColumn'>\r\n          <p className='label robotoFont'>Full Name</p>\r\n          <input className='robotoFont' />\r\n        </div>\r\n\r\n        <div className='inputWrapper flexColumn'>\r\n          <p className='label robotoFont'>Username</p>\r\n          <input className='robotoFont' />\r\n        </div>\r\n\r\n        <div className='inputWrapper flexColumn'>\r\n          <p className='label robotoFont '>Password</p>\r\n\r\n          <div className='passowrdInputWrapper flexRow'>\r\n            <input className='robotoFont' type='password' />\r\n            <ErrorOutlineIcon className={classes.exclamationIcon} />\r\n            <div id='talkbubble'></div>\r\n          </div>\r\n        </div>\r\n        <div className='inputWrapper flexColumn'>\r\n          <p className='label robotoFont'>Confrim Password</p>\r\n          <input className='robotoFont' type='password' />\r\n        </div>\r\n        <div className='inputWrapper flexColumn'>\r\n          <p className='label robotoFont'>Age</p>\r\n          <input className='robotoFont' />\r\n        </div>\r\n        <div className='inputWrapper flexColumn'>\r\n          <p className='label robotoFont'>Country</p>\r\n          <input className='robotoFont' />\r\n        </div>\r\n      </form>\r\n      <div className='buttonWrapper'>\r\n        <button className='robotoFont'>Submit</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n//styling\nimport \"./App.scss\";\n\n//pages\nimport LandingPageNew from \"./react/LandingPageNew\";\nimport SignUpPage from \"./react/SignUpPage\";\n// import FormPage from \"./react/FormPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className='appComponent'>\n        <Route path='/' exact component={LandingPageNew} />\n        <Route path='/sign-up' component={SignUpPage} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}